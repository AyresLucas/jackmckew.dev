<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Jack McKew's Blog - Engineering</title><link href="https://jackmckew.dev/" rel="alternate"></link><link href="https://jackmckew.dev/feeds/engineering.atom.xml" rel="self"></link><id>https://jackmckew.dev/</id><updated>2019-06-21T06:30:00+10:00</updated><subtitle>Engineer | Software Developer | Data Scientist</subtitle><entry><title>Python and Data Security (Hashing Algorithms)</title><link href="https://jackmckew.dev/python-and-data-security-hashing-algorithms.html" rel="alternate"></link><published>2019-06-21T06:30:00+10:00</published><updated>2019-06-21T06:30:00+10:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-06-21:/python-and-data-security-hashing-algorithms.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Data security is becoming more and more prevalent in today's society than ever before. We must make a conscious effort to secure both our physical lives, but also our digital lives as well. With data privacy, sharing of information and access control becoming integrated into most people's life in some …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Data security is becoming more and more prevalent in today's society than ever before. We must make a conscious effort to secure both our physical lives, but also our digital lives as well. With data privacy, sharing of information and access control becoming integrated into most people's life in some way or another. Since this topic is so wide and deep, this will most likely become a series of posts as I am passionate around data security and enjoy getting stuck right into the math behind it. This post will be around hashing algorithms but future topics will include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hashing Algorithms (this post),&lt;/li&gt;
&lt;li&gt;Modular Arithmetic and why it's used,&lt;/li&gt;
&lt;li&gt;Securely sharing keys,&lt;/li&gt;
&lt;li&gt;Methods of encryption,&lt;/li&gt;
&lt;li&gt;Methods of data security,&lt;/li&gt;
&lt;li&gt;Analyzing security weaknesses,&lt;/li&gt;
&lt;li&gt;Many more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As above, this post is dedicated to hashing algorithms and how to interface with them with Python for data security.&lt;/p&gt;
&lt;h3 id="what-is-a-hashing-algorithm"&gt;What is a Hashing Algorithm&lt;/h3&gt;
&lt;p&gt;The sole purpose of a hashing algorithm is to generate a safe hash which in turn raises the questions of what is a hash and what makes it safe?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A hash is a value computed from a base input number using a hashing function.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With a hashing function being:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A &lt;strong&gt;hash function&lt;/strong&gt; is any &lt;a href="https://en.wikipedia.org/wiki/Function_(mathematics)"&gt;function&lt;/a&gt; that can be used to map &lt;a href="https://en.wikipedia.org/wiki/Data_(computing)"&gt;data&lt;/a&gt; of arbitrary size onto data of a fixed size.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Hash_function"&gt;https://en.wikipedia.org/wiki/Hash_function&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The hashing algorithm is intrinsically designed to be a one-way function, meaning it is impractical to revert. Although, as history has shown, as computing advances are made hashing algorithms are becoming compromised. A prime example of this being the MD5 algorithm, which was designed and used a cryptographic hash function (data security), but is now so simply reverse, that it is used for verifying data transfers.&lt;/p&gt;
&lt;p&gt;There are certain characteristics around what the perfect or ideal hash function for data security should possess:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Easy/speed of computation,&lt;/li&gt;
&lt;li&gt;Impossible/impractical to regenerate source data/message (brute force as only option),&lt;/li&gt;
&lt;li&gt;Unique hashes for data (also known as hash collisions when there are duplicate hashes),&lt;/li&gt;
&lt;li&gt;Any change is source data should change the hash value (known as the avalanche effect).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="what-is-hashing-used-for-in-practice"&gt;What is hashing used for in practice&lt;/h3&gt;
&lt;p&gt;Hashing algorithms for data security in the real world is used in a variety of situations from ensuring files were successfully delivered correctly or to store sensitive/private information. If you are reading this, I can almost guarantee that you have some interface with a hashing algorithm right now! Whether it be how you're password is stored to indexing data in a database.&lt;/p&gt;
&lt;h3 id="using-hashes-with-python"&gt;Using hashes with Python&lt;/h3&gt;
&lt;p&gt;This will be a simple use-case of a hashing algorithm using Python to securely convert passwords and how to verify against them (storing the hashed data is it's own beast in itself). Please note I will be utilizing the &lt;a href="https://passlib.readthedocs.io/en/stable/"&gt;passlib&lt;/a&gt; package which contains over 30 password hashing algorithms, as well as a framework for managing existing password hashes.&lt;/p&gt;
&lt;p&gt;First of all we must select a hashing algorithm to use, to help with this from the team at passlib they have provided a &lt;a href="https://passlib.readthedocs.io/en/stable/narr/quickstart.html"&gt;basic guideline of questions&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Does the hash need to be natively supported by your operating system’s &lt;code&gt;crypt()&lt;/code&gt; api,in order to allow inter-operation with third-party applications on the host?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If yes, the right choice is either &lt;a href="https://passlib.readthedocs.io/en/stable/lib/passlib.hash.bcrypt.html#passlib.hash.bcrypt"&gt;&lt;code&gt;bcrypt&lt;/code&gt;&lt;/a&gt; for BSD variants,or &lt;a href="https://passlib.readthedocs.io/en/stable/lib/passlib.hash.sha512_crypt.html#passlib.hash.sha512_crypt"&gt;&lt;code&gt;sha512_crypt&lt;/code&gt;&lt;/a&gt; for Linux; since these are natively supported.&lt;/li&gt;
&lt;li&gt;If no, continue...&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Does your hosting provider allow you to install C extensions?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If no, you probably want to use &lt;a href="https://passlib.readthedocs.io/en/stable/lib/passlib.hash.pbkdf2_digest.html#passlib.hash.pbkdf2_sha256"&gt;&lt;code&gt;pbkdf2_sha256&lt;/code&gt;&lt;/a&gt;,as this currently has the fastest pure-python backend.&lt;/li&gt;
&lt;li&gt;If they allow C extensions, continue...&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Do you want to use the latest &amp;amp; greatest, and don’t mind increased memory usage when hashing?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://passlib.readthedocs.io/en/stable/lib/passlib.hash.argon2.html#passlib.hash.argon2"&gt;&lt;code&gt;argon2&lt;/code&gt;&lt;/a&gt; is a next-generation hashing algorithm,attempting to become the new standard. It’s design has been being slightly tweaked since 2013, but will quite likely become &lt;em&gt;the&lt;/em&gt; standard in the next few years. You’ll need to install the &lt;a href="https://pypi.python.org/pypi/argon2_cffi"&gt;argon2_cffi&lt;/a&gt; support library.&lt;/li&gt;
&lt;li&gt;If you want something secure, but more battle tested, continue...&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The top choices left are &lt;a href="https://passlib.readthedocs.io/en/stable/lib/passlib.hash.bcrypt.html#passlib.hash.bcrypt"&gt;&lt;code&gt;bcrypt&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://passlib.readthedocs.io/en/stable/lib/passlib.hash.pbkdf2_digest.html#passlib.hash.pbkdf2_sha256"&gt;&lt;code&gt;pbkdf2_sha256&lt;/code&gt;&lt;/a&gt;. Both have advantages, and their respective rough edges; though currently the balance is in favor of bcrypt (pbkdf2 can be cracked somewhat more efficiently).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If choosing bcrypt, we strongly recommend installing the &lt;a href="https://pypi.python.org/pypi/bcrypt"&gt;bcrypt&lt;/a&gt; support library on non-BSD operating systems.&lt;/li&gt;
&lt;li&gt;If choosing pbkdf2, especially on python2 \&amp;lt; 2.7.8 and python 3 \&amp;lt; 3.4, you will probably want to install &lt;a href="https://pypi.python.org/pypi/fastpbkdf2"&gt;fastpbk2&lt;/a&gt; support library.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From this, we will use the argon2 hashing algorithm. As normal, it is best practice to set up a virtual environment (or conda environment) and install the dependencies, in this case passlib.&lt;/p&gt;
&lt;p&gt;First of all, import the hashing algorithm you wish to use from the passlib package:&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;passlib.hash&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;argon2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;Following importing the hashing algorithm, to hash the password in our case is very simple and we can have a peak at what the output hash looks like:&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argon2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"super_secret_password"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;\&lt;span class="math"&gt;\(argon2i\\)&lt;/span&gt;v=19\&lt;span class="math"&gt;\(m=102400,t=2,p=8\\)&lt;/span&gt;NqY05lyrtdb6v/ee03pvrQ\$mvLTquN71JPjuC+S9QNXYA&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first section ("\&lt;span class="math"&gt;\(argon2i\\)&lt;/span&gt;v=19\&lt;span class="math"&gt;\(m=102400,t=2,p=8\\)&lt;/span&gt;") is the header information, showing the parameters that the algorithm used to generate the hash. While this seems as if it would make the algorithm easier to break, imagine a scenario where every password is hashed using an hashing algorithm with randomised parameters; verifying passwords would be a nightmare. Let's further break down what this represents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;\$argon2i - the variant of Argon2 algorithm being used,&lt;/li&gt;
&lt;li&gt;\$v=19 - the version of Argon2 being used,&lt;/li&gt;
&lt;li&gt;\$m=102400,t=2,p=8 - the memory (m), iterations (t) and parallelism (p) parameters being used,&lt;/li&gt;
&lt;li&gt;\$NqY05lyrtdb6v/ee03pvrQ - the base64-encoded salt (added randomness), using standard base64 encoding and no padding,&lt;/li&gt;
&lt;li&gt;\$mvLTquN71JPjuC+S9QNXYA - the base64-encoded hashed password (derived key), using standard base64 encoding and no padding.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we run this again, we can check that the outputs are completely different due to the randomly generated salt.&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argon2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"super_secret_password"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;\&lt;span class="math"&gt;\(argon2i\\)&lt;/span&gt;v=19\&lt;span class="math"&gt;\(m=102400,t=2,p=8\\)&lt;/span&gt;8f4/x7hXitGacy6F8N67dw\$/jPKQ98vLQCxkboxRlHa/g&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now that we've generated our new passwords, stored them away in a secure database somewhere, using a secure method of communication somehow, our user wants to login with the password they signed up with ("super_secret_password") and we have to check if this is the correct password.&lt;/p&gt;
&lt;p&gt;To do this with passlib, it is as simply as calling the .verify function with the plaintext and the equivalent hash which will return a boolean value determining whether of not the password is correct or not.&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argon2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"super_secret_password"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hooray! Our password verification system works, now we would like to check that if the user inputs a incorrect password that our algorithm returns correctly (false).&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argon2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"user_name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;False&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="conclusion"&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Hopefully this has given you some insight into what hashing algorithms are, how they are used and how to use them with Python. They can both be an extremely powerful tool for securing data, however, must always be revisited later on down the track as advancements are made and your system may now be compromised.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Python"></category><category term="python"></category><category term="security"></category></entry><entry><title>Explained: Voltage Drop</title><link href="https://jackmckew.dev/explained-voltage-drop.html" rel="alternate"></link><published>2019-05-10T06:30:00+10:00</published><updated>2019-05-10T06:30:00+10:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-05-10:/explained-voltage-drop.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Voltage drop is a electrical phenomenon in that wires carrying current always have resistance, or impedance to the current flow. Voltage drop is defined as the amount of loss that occurs through part of or all of a circuit due to resistance/impedance.&lt;/p&gt;
&lt;p&gt;The most well known analogy for explaining …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Voltage drop is a electrical phenomenon in that wires carrying current always have resistance, or impedance to the current flow. Voltage drop is defined as the amount of loss that occurs through part of or all of a circuit due to resistance/impedance.&lt;/p&gt;
&lt;p&gt;The most well known analogy for explaining voltage, current and voltage drop is a hose carrying water. In the garden hose, the water pressure is the voltage, the amount of water flowing is the current and the type and size of the hose makes up the resistance. Thus meaning that voltage drop is the loss of water pressure from the supply end of the hose to the output.&lt;/p&gt;
&lt;p&gt;When designing electrical systems within Australia and New Zealand, we are required to design to Australian standards. For voltage drop, the relevant standards as AS/NZS3000 (Wiring Rules) and AS/NZS3008 (Cable Selection). Where AS/NZS3000 nominates the limits to conform to (5% maximum from point of supply) and AS3008 dictates multiple ways that voltage drop can be calculated.&lt;/p&gt;
&lt;p&gt;For this post, I will demonstrate a simplified method that is outlined in AS3000 Table C7 where it specifies 'Am per %Vd' (Amp meters per % voltage drop) for each cable size:&lt;/p&gt;
&lt;table class="table table-striped"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Cable Conductor Size&lt;/th&gt;
&lt;th&gt;Single Phase (230V) Am per %Vd&lt;/th&gt;
&lt;th&gt;Three Phase (400V) Am per %Vd&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1mm^2^&lt;/td&gt;
&lt;td&gt;45&lt;/td&gt;
&lt;td&gt;90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5mm^2^&lt;/td&gt;
&lt;td&gt;70&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.5mm^2^&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4mm^2^&lt;/td&gt;
&lt;td&gt;205&lt;/td&gt;
&lt;td&gt;412&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6mm^2^&lt;/td&gt;
&lt;td&gt;306&lt;/td&gt;
&lt;td&gt;615&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10mm^2^&lt;/td&gt;
&lt;td&gt;515&lt;/td&gt;
&lt;td&gt;1034&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16mm^2^&lt;/td&gt;
&lt;td&gt;818&lt;/td&gt;
&lt;td&gt;1643&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25mm^2^&lt;/td&gt;
&lt;td&gt;1289&lt;/td&gt;
&lt;td&gt;2588&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35mm^2^&lt;/td&gt;
&lt;td&gt;1773&lt;/td&gt;
&lt;td&gt;3560&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;50mm^2^&lt;/td&gt;
&lt;td&gt;2377&lt;/td&gt;
&lt;td&gt;4772&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70mm^2^&lt;/td&gt;
&lt;td&gt;3342&lt;/td&gt;
&lt;td&gt;6712&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;95mm^2^&lt;/td&gt;
&lt;td&gt;4445&lt;/td&gt;
&lt;td&gt;8927&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For example, a 50m run of 10mm\^2^ cable carrying 3 phase 32A will result in 5% drop: 32A * 50m = 1600 / 1034 = 1.5%.&lt;/p&gt;
&lt;p&gt;In future posts, I will go into the various ways that AS/NZS3008 demonstrates ways of calculating voltage drop.&lt;/p&gt;</content><category term="Engineering"></category><category term="electrical"></category></entry><entry><title>How to Program an ESP8266 with MicroPython</title><link href="https://jackmckew.dev/how-to-program-an-esp8266-with-micropython.html" rel="alternate"></link><published>2019-04-05T06:30:00+11:00</published><updated>2019-04-05T06:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-04-05:/how-to-program-an-esp8266-with-micropython.html</id><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Following the previous two weeks of topics, &lt;a href="https://jackmckew.dev/introduction-to-esp32-esp8266.html"&gt;Introduction to ESP32/ESP8266&lt;/a&gt; and &lt;a href="https://jackmckew.dev/what-is-micropython.html"&gt;What is MicroPython?&lt;/a&gt;.  I wrote an &lt;a href="https://maker.pro/esp8266/tutorial/how-to-program-an-esp8266-with-micropython"&gt;article on maker.pro&lt;/a&gt; in which I describe how to program the ESP8266 with MicroPython in detail.&lt;/p&gt;</content><category term="Engineering"></category><category term="electrical"></category><category term="esp8266"></category></entry><entry><title>Introduction to ESP32/ESP8266</title><link href="https://jackmckew.dev/introduction-to-esp32-esp8266.html" rel="alternate"></link><published>2019-03-22T06:30:00+11:00</published><updated>2019-03-22T06:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-03-22:/introduction-to-esp32-esp8266.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;h2 id="what-is-an-esp32esp8266"&gt;What is an ESP32/ESP8266&lt;/h2&gt;
&lt;p&gt;The ESP32 and ESP8266 are low-cost Wi-Fi modules, which are perfect for DIY Internet of Things (IoT) projects. They both come with general purpose input/output pins (GPIOs), support a variety of protocols such as SPI, I2C, UART and many more. The most attractive part …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;h2 id="what-is-an-esp32esp8266"&gt;What is an ESP32/ESP8266&lt;/h2&gt;
&lt;p&gt;The ESP32 and ESP8266 are low-cost Wi-Fi modules, which are perfect for DIY Internet of Things (IoT) projects. They both come with general purpose input/output pins (GPIOs), support a variety of protocols such as SPI, I2C, UART and many more. The most attractive part of the ESP range is that they come with wireless networking included, separating them from their Arduino microcontroller counterparts. All in all, the ESP series allows you to easily control/monitor devices remotely using Wi-Fi for a very low price.&lt;/p&gt;
&lt;h3 id="esp32-vs-esp8266"&gt;ESP32 vs ESP8266&lt;/h3&gt;
&lt;p&gt;The ESP32 is the later ‘model’ of the ESP8266. It added a whole suite of new functionality such as: touch sensitive pins, built-in temperature and hall effect sensors and upgraded from single core CPU to a dual core, faster Wi-FI, more GPIOs and now supports Bluetooth and BLE (Bluetooth Low Energy). While both boards are very low-cost, the ESP32 costs slightly more, the ESP8266 (here in Australia) costs around \~\&lt;span class="math"&gt;\(10AU, and the ESP32 around \~\\)&lt;/span&gt;22AU.&lt;/p&gt;
&lt;p&gt;&lt;img alt="\
**ESP8266**\
" class="img-fluid" src="https://lh5.googleusercontent.com/YEn9Lm0l_QN1jP9Ea6uZmsv35BVp1tqf5hzIZxX3FrVzfZ1MeN6k5pgU-gR6sWmydMCJr0s0pgN8yDBWOQ3-7FqAmAd2ic81lL-QyWsL_Vmu7DAObpqPS3KbeOCC6-ZVT_yV8F9x"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="\
**ESP32**\
" class="img-fluid" src="https://lh4.googleusercontent.com/yDWgNpn3xMkKX994_b1IzbLWxbo83S2DDKlgS9y4wVbp37ADfVuJwF2EX6H_UWEzcmHfxe_cuABMR920dr0Ebx5WNOwtj0mhoIZjPwiBQcEp0HI1_ZeB4RoL9xaDqCDd4h9651Cv"/&gt;&lt;/p&gt;
&lt;h2 id="flavours-of-esp-boards"&gt;Flavours of ESP boards&lt;/h2&gt;
&lt;p&gt;There are currently many different varieties of ESP flavours you can buy off the shelf, while if you are more into developing the board around your ESP module (the pictures above) you can simply just purchase the relevant ESP module, or if you are like me and don’t want to bother soldering and developing your own board there is a solutions for you!\&lt;/p&gt;
&lt;h3 id="esp32-development-boards"&gt;ESP32 Development Boards&lt;/h3&gt;
&lt;h4 id="esp32-thing-sparkfun"&gt;ESP32 Thing - Sparkfun&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Sparkfun Image" class="img-fluid" src="https://lh4.googleusercontent.com/KbaOiY3Ua8m_lSgC-RJu8arkN7Ao77SkRh8GBIqHYs13cJz4QD50ZNfJ7LzQh8OLUvmOvbwI1aABuY5airc2IlLBnV23U-I6PoX14HuFPBe4xHEEh8RR11TWp0ZTaINXCUoYJNC4"/&gt;&lt;/p&gt;
&lt;p&gt;The ESP32 Thing comes with all the functionalities to easily communication and program the ESP32 with your computer (including a on-board USB-Serial). It also features a LiPo charger, so your ESP32 project can use rechargeable batteries without having to solder any terminals and make it easy to replace/disconnect the battery pack.&lt;/p&gt;
&lt;h4 id="espressif-esp32-development-board-developer-edition"&gt;Espressif ESP32 Development Board - Developer Edition&lt;/h4&gt;
&lt;p&gt;&lt;img alt="ESP32 Image" class="img-fluid" src="https://lh4.googleusercontent.com/nEUzBIo2o0em3J1qshFFcl5j8nhsyrQ3u6hMco2gW590xiJhmjhOd7dRu8IUcCzu5yuKfOS43gEOaHSsNYRGIvLKSc1Yb3MjRL8vIZT5LNkTXud_DWZqL7paMXOPYx9eLzR2fPgX"/&gt;&lt;/p&gt;
&lt;p&gt;If you’re not confident on soldering the header pins on the Sparkfun Thing board, then the Espressif board comes with that done for you! The header pins are also nicely spaced out so if you are a breadboard enthusiast, you can just plug and play on your breadboard and start connecting all your header wires.&lt;/p&gt;
&lt;h3 id="esp8266-development-boards"&gt;ESP8266 Development Boards&lt;/h3&gt;
&lt;h4 id="nodemcu"&gt;NodeMCU&lt;/h4&gt;
&lt;p&gt;&lt;img alt="NodeMCU Image" class="img-fluid" src="https://lh4.googleusercontent.com/8uW0VTOhEuA6ILjpw2C2Mfv34emw8jjj9rIpuWjbedNzku76cVO6hBoScNNPpx1Ei0P4ci31B0gYeaO2hfvOER1v67J1PXAfkey9cFzvPWIU4qPL4Q3bb3vcnK5GBlIZu8hr2ujm"/&gt;&lt;/p&gt;
&lt;p&gt;The NodeMCU is my personal favourite ESP flavour board because it is friendly to your breadboard, has an on-board USB-Serial and can be powered by USB. This all means that you can test and develop your board straight out of the box without fiddling around with soldering pins, voltages or getting any extra components (except a Micro-usb cable).&lt;/p&gt;
&lt;h4 id="adafruit-huzzah-esp8266-breakout"&gt;Adafruit Huzzah ESP8266 Breakout&lt;/h4&gt;
&lt;p&gt;&lt;img alt="Huzzah Board Image" class="img-fluid" src="https://lh6.googleusercontent.com/BN-_9XEuEPYw5wl_AiDR5OfcwF2ulK7SQMrpnmglXTe41m7ssb22kARsw8zyzmBJFeFQgHXG4jZQu1RN4Lj0itUJgeqqosQN7zZ4pzavsBPtguSzM819r2W7l-uBixDY4ZwRHDqq"/&gt;&lt;/p&gt;
&lt;p&gt;The Huzzah board is Adafruits answer to other development boards that weren’t friendly to breadboards, didn’t have on-board voltage regulators and weren’t CE or FCC emitter certified. The Huzzah board comes with all these functionalities, although unlike the NodeMCU you will need to get a USB-Serial cable to able to program your Huzzah board.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Engineering"></category><category term="esp8266"></category></entry><entry><title>Episode 17 – Networking Routing &amp; Addressing</title><link href="https://jackmckew.dev/episode-17-networking-routing-addressing.html" rel="alternate"></link><published>2019-03-15T06:30:00+11:00</published><updated>2019-03-15T06:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-03-15:/episode-17-networking-routing-addressing.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Following last weeks post around network topologies, I believe the next topic to cover is routing and addressing. Routing is the process of selecting a path for traffic to flow through in a network while addressing is marking elements within a network. A real-world example of routing and addressing is …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Following last weeks post around network topologies, I believe the next topic to cover is routing and addressing. Routing is the process of selecting a path for traffic to flow through in a network while addressing is marking elements within a network. A real-world example of routing and addressing is the postal system, each element (person) is marked with an address (eg, a street address) and the mail makes it to that address from routing it from the sender to the receiver.&lt;/p&gt;
&lt;p&gt;While the goal for routing may be simple (“go from sender to receiver in the most efficient/quickest way possible”), the techniques used to achieve this can be very complex and confusing but when solutions are found that make a network work efficiently, it is a very rewarding experience for all users.&lt;/p&gt;
&lt;p&gt;Routing can be broken into three broad categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Protocols – the medium that allows information to move through a network&lt;/li&gt;
&lt;li&gt;Algorithms – to determine paths between sender and receiver&lt;/li&gt;
&lt;li&gt;Databases – to store information that the algorithms determine&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The whole premise around routers in a network (&lt;a href="https://jackmckew.dev/episode-16-networking-basics.html"&gt;Networking Basics&lt;/a&gt;) is that they will “pass it on”, either to their smarter peers or in the correct direction. For example in a star/tree network, devices pass information to their closest ‘router’ which then decides either to pass it directly to the correct address or to another router which may have a better idea on where the information is intended on going.&lt;/p&gt;
&lt;h3 id="protocols"&gt;Protocols&lt;/h3&gt;
&lt;p&gt;In industry, some of the most common networking protocols are MODBUS and DNP3. Modbus being a de-facto standard for interconnecting electrical equipment and DNP3 (Distributed Network Protocol) commonly being used in the water/electric industries for their flexibility during outages or broken links in a network.&lt;/p&gt;
&lt;h3 id="algorithms"&gt;Algorithms&lt;/h3&gt;
&lt;p&gt;Routing tables is the most prevalent type of routing algorithms with their fixed nature meaning once the routing decisions for how information travels have been decided, they do not change. The other type of routing algorithms (which are much more exciting) are known as adaptive algorithms, which means the routing changes depending on: topology, delay, load, etc, to try and reach the most efficient path from sender to receiver.&lt;/p&gt;
&lt;h3 id="databases"&gt;Databases&lt;/h3&gt;
&lt;p&gt;Following algorithms, databases can either hold the entire routing table and a router looks up where it wants to go and it which path to take (similar to a bus timetable), or, forwarding tables (technically can be apart of routing tables as well) which detail the communications pathways to utilize for types of traffic.&lt;/p&gt;</content><category term="Engineering"></category><category term="networking"></category></entry><entry><title>Episode 16 - Networking Basics</title><link href="https://jackmckew.dev/episode-16-networking-basics.html" rel="alternate"></link><published>2019-03-08T06:30:00+11:00</published><updated>2019-03-08T06:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-03-08:/episode-16-networking-basics.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;A network is defined as “A network is a collection of computers, servers, mainframes, network devices, peripherals, or other devices connected to one another to allow the sharing of data”. There are various configurations of networks for specific design scenarios as represented in:&lt;/p&gt;
&lt;p&gt;&lt;img alt="network_topologies" class="img-fluid" src="https://jackmckew.dev/img/nettopo.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Typical residential home networks are configured in …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;A network is defined as “A network is a collection of computers, servers, mainframes, network devices, peripherals, or other devices connected to one another to allow the sharing of data”. There are various configurations of networks for specific design scenarios as represented in:&lt;/p&gt;
&lt;p&gt;&lt;img alt="network_topologies" class="img-fluid" src="https://jackmckew.dev/img/nettopo.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Typical residential home networks are configured in a tree topology that is connected to the internet. This typically consists of a single router/modem that serves all the end-user devices on the network with internet connection. The router also acts as a gateway for the devices connected on the network to communicate with one another.&lt;/p&gt;
&lt;p&gt;Packets of data that are generated by the devices are encapsulated with destination routing information; which is passed to the router at the center which directs the data to it’s destination in the network. For example, a user connects to the router to gain access to a wider network that is the internet to load this webpage.&lt;/p&gt;
&lt;p&gt;If there was a higher risk on losing the communications medium between two devices (cable failure), then bus would be at disadvantage here but ring might prove more beneficial although transmission would be slower as the network connection would be further away (go around the ring in the case of the picture above).&lt;/p&gt;
&lt;h3 id="mesh-topology"&gt;Mesh Topology&lt;/h3&gt;
&lt;p&gt;By explaining network topologies by comparing to a basic Wi-Fi network normally gets the message across. A mesh network can prove beneficial to areas in which a star network isn't covering the area you wish it to, for example, if you have 'dark' spots where you don't receive Wi-Fi signal, a mesh network might be better suited. A practical implementation of a mesh network can be seen in shopping centre's Wi-Fi networks where multiple routers are placed strategically such that you can walk around the entire property and not lose signal.&lt;/p&gt;
&lt;h3 id="ring-topology"&gt;Ring Topology&lt;/h3&gt;
&lt;p&gt;While star is a very popular configuration of network, it however is not the most ideal configuration for some types of networks. For example, if you had a series of devices that all needed to talk to each other, even if one was to fail, then a ring/bus/mesh would be more applicable where there is always a path to everyone else if a device was to fall offline.&lt;/p&gt;
&lt;h3 id="star-topology"&gt;Star Topology&lt;/h3&gt;
&lt;p&gt;If you consider a home Wi-Fi network that doesn't connect out further (no internet connection) then you have a basic star network. The center of the star in this scenario would be the Wi-Fi router, you can still connect to the other devices but not outside of your network and all messages have to travel through the router.&lt;/p&gt;
&lt;h3 id="tree-topology"&gt;Tree Topology&lt;/h3&gt;
&lt;p&gt;A tree topology is just creating multiple star networks off the back of another network. For example, if you considered the network that is your internet connection from the street (or satellite), then connecting to your modem (gateway) then furthering to your devices in your home, you have a basic tree network.&lt;/p&gt;
&lt;h3 id="bus-topology"&gt;Bus Topology&lt;/h3&gt;
&lt;p&gt;Where devices are connected to a single medium (cable) to communicate with each other, you now have a bus network. A bus network proves it's advantages by less cabling than star networks, ease of installation of linear networks and works well with small networks. It is easy enough to add new devices to the network and if one fails (but the medium doesn't) then all devices can still communicate. Disadvantages arise when problems occur as it difficult to determine the cause of an issue on a bus network.&lt;/p&gt;</content><category term="Engineering"></category><category term="networking"></category></entry><entry><title>Episode 15 - What is a C.T?</title><link href="https://jackmckew.dev/episode-15-what-is-a-c-t.html" rel="alternate"></link><published>2019-03-01T05:30:00+11:00</published><updated>2019-03-01T05:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-03-01:/episode-15-what-is-a-c-t.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;A C.T is the abbreviated form for a current transformer in electrical terms. It is a simple but effective use of magnetic circuits and transformer characteristics to monitor how power is behaving in a conductor. The C.T works by wrapping a coil of conductor around a core (typically …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;A C.T is the abbreviated form for a current transformer in electrical terms. It is a simple but effective use of magnetic circuits and transformer characteristics to monitor how power is behaving in a conductor. The C.T works by wrapping a coil of conductor around a core (typically silicon steel) shaped like a ring, the 'power' wire or the active is then passed through the core. When alternating current passes through the active conductor, this then generates a magnetic field around the wire, inducing a current proportional to the number of turns the wire is wrapped around the core.&lt;/p&gt;
&lt;p&gt;The C.T is a very widely used piece of equipment in instrument electrical/electronics as it allows for an indirect way of monitoring for the power flow unlike a 'flow' meter that must be a part of the pipework to directly measure flow. While it is still possible to monitor current in a 'flow' meter type fashion, it is far less risk to implement a C.T solution.&lt;/p&gt;
&lt;p&gt;Possibly the frequent implementation of C.Ts in everyday life is within power meter solutions. By attaching a C.T to the active conductor that is powering a piece of equipment, we are then able to measure the power the equipment is using in real time. This can then be further digitised and utilised in a network fashion to provide asset owners with real time energy usage of their equipment.&lt;/p&gt;
&lt;p&gt;It must be noted when using C.Ts on alternating current systems that the C.T must only have a single conductor pass through it (the active); if both the active and the neutral are passed through the C.T then (in an ideal world) the C.T will have an output of 0. If you also pass through the earth wire to the equipment, it is possible to measure earth leakage or earth fault current (provided the measurement can handle it).&lt;/p&gt;
&lt;p&gt;&lt;img alt="&amp;lt;https://www.electronics-tutorials.ws/transformer/current-transformer.html" class="img-fluid" src="https://jackmckew.dev/img/trans53.gif"/&gt;&lt;/p&gt;</content><category term="Engineering"></category><category term="electrical"></category></entry><entry><title>Episode 13 - Lighting Design</title><link href="https://jackmckew.dev/episode-13-lighting-design.html" rel="alternate"></link><published>2019-02-15T06:30:00+11:00</published><updated>2019-02-15T06:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-02-15:/episode-13-lighting-design.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Before I started in a more buildings-focused electrical engineering position, I didn't think that much went into selecting lights for buildings. Once you first get started in lighting design, it is like opening a can of worms, there is so much detail that goes into lighting design, it's unfathomable.&lt;/p&gt;
&lt;p&gt;First …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Before I started in a more buildings-focused electrical engineering position, I didn't think that much went into selecting lights for buildings. Once you first get started in lighting design, it is like opening a can of worms, there is so much detail that goes into lighting design, it's unfathomable.&lt;/p&gt;
&lt;p&gt;First of all, lighting design in Australia is dictated by AS1158. Not only does the Australian standard explicitly state illuminance requirements for rooms based on their task (eg 320 lux for office based tasks), it also clearly defines how to calculate these levels based on the environment.&lt;/p&gt;
&lt;p&gt;What really is lux? Lux is the SI derived unit of illuminance and luminous emittance, measuring luminous flux per unit area. It is equal to one lumen per square meter. Luminous flux? Lumens? What do all these terms mean? A lumen is the SI derived unit of luminous flux, which is a measure of the total amount of visible light emitted by a source.&lt;/p&gt;
&lt;p&gt;Now when it comes to designing lighting for a building/area, multiple large considerations must be taken. Once you have determined what tasks will be completed within the area you are designing, you must then go to AS1158 and determine the required lux requirements. Following this, you must ensure you have accurate dimensions of the area you are designing for, along with all reflectance (colour) of surfaces within the area.&lt;/p&gt;
&lt;p&gt;Once you have got all these parameters, it is time to begin modelling the area within any lighting design software package (eg AGI-32). Now the designer must select lights (luminaires) to be specified for the area. The designer must take into consideration the ceiling (if there is one) type, this will dictate how the luminaires are to be mounted, be it: surface, recessed, suspended or pole mounted.&lt;/p&gt;
&lt;p&gt;Most luminaire fitting manufacturers will provide photometric files (IES files) detailing how their respective lights would behave if they were installed in the design area.&lt;/p&gt;
&lt;p&gt;Once the designer has verified that the specified luminaires will meet required lux levels in the area, this design must be passed to the electrical designer as they must factor in how much power all the luminaires will require to operate and how the cable routes must be laid out to suit the luminaires on the site.&lt;/p&gt;
&lt;p&gt;Please note, that this is a very simplistic view at lighting design. Just like any area of work, there is an art to doing a proper job.&lt;/p&gt;</content><category term="Engineering"></category><category term="electrical"></category></entry><entry><title>Episode 11 - Power Quality Explained</title><link href="https://jackmckew.dev/episode-11-power-quality-explained.html" rel="alternate"></link><published>2019-02-01T06:30:00+11:00</published><updated>2019-02-01T06:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-02-01:/episode-11-power-quality-explained.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;I've always lived by the rule that if you can't explain something to a 5 year old then you don't know it well enough. I was asked recently by some (non-electrical focused) colleagues on a handful of electrical terms and components. One of the biggest things that kept popping up …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;I've always lived by the rule that if you can't explain something to a 5 year old then you don't know it well enough. I was asked recently by some (non-electrical focused) colleagues on a handful of electrical terms and components. One of the biggest things that kept popping up that I found difficult to explain clearly was power quality and it's issues. So I decided why not dedicate a blog post about it and write a basic example power factor capacitor calculator in Python.&lt;/p&gt;
&lt;p&gt;Power quality is defined as "the concept of powering and grounding sensitive electronic equipment in a manner suitable for the equipment with precise wiring system and other connected equipment" by the IEEE (The Institute of Electrical and Electronics Engineers). In a simplistic view this is just trying to say that electrical equipment is to be installed/configured in a way that is operates as intended.&lt;/p&gt;
&lt;p&gt;Quality of power is not determined by the one who produces it, it's defined by the end user of the power. Eg, like a physical product, if you buy something from a store and it's poor quality, that's being defined by the end user. Similar to that of a physical product, quality of power can be lost in a variety of forms/ways.&lt;/p&gt;
&lt;p&gt;Issues with power quality can be categorized into three main categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Harmonic voltages and currents&lt;/li&gt;
&lt;li&gt;Poor power factor&lt;/li&gt;
&lt;li&gt;Voltage instability&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="harmonics"&gt;Harmonics&lt;/h2&gt;
&lt;p&gt;AC (Alternating Current) electricity is generated as a sinusoidal waveform, and harmonics are signals/waves whose frequency is a whole number multiple of the frequency of the reference signal/wave. To visualize this phenomenon, we can use packages like NumPy and Matplotlib, to calculate and plot our base signal and it's harmonics (I encourage you to run this code and change the harmonics to see what they look like).&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;Harmonic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="n"&gt;Harmonic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Harmonic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Harmonic(3)&lt;/span&gt;
&lt;span class="c1"&gt;# Harmonic(4)&lt;/span&gt;
&lt;span class="c1"&gt;# Harmonic(5)&lt;/span&gt;
&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;The example above shows us the base signal (fundamental frequency), and it's first harmonic (harmonic of 2 or twice as fast as the fundamental frequency).&lt;/p&gt;
&lt;p&gt;&lt;img alt="Harmonic1_2" class="img-fluid" src="https://jackmckew.dev/img/Harmonic1_2.png"/&gt;&lt;/p&gt;
&lt;p&gt;When these two signals are superimposed on each other, they produce a distorted waveform. Electrical equipment is designed to operate at the base signal (50Hz here in Australia), and typically does not cope with distorted wave like seen below when we superimpose a base signal with it's first harmonic.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Harmonic1_2_Combined.png" class="img-fluid" src="https://jackmckew.dev/img/Harmonic1_2_Combined.png"/&gt;&lt;/p&gt;
&lt;p&gt;Luckily, these issues are now easily detected and rectified by harmonic analyzers and active/passive harmonic filters.&lt;/p&gt;
&lt;h2 id="power-factor"&gt;Power Factor&lt;/h2&gt;
&lt;p&gt;Power factor is a measure of how effectively power is being used in an electrical system, and is defined as the ratio of real (useful) to apparent (total) power.&lt;/p&gt;
&lt;p&gt;Real power (kW) is the power that actually powers the equipment to produce useful work (such as spinning a motor). It can also be called actual, active or working power.&lt;/p&gt;
&lt;p&gt;Reactive power (kVAR) is the power required by (some) equipment (eg, motors), to produce a magnetic field to enable the useful work to be produce. It's necessary to operate the equipment, however you don't see any result from the reactive power.&lt;/p&gt;
&lt;p&gt;Apparent power (kVA) is the vector sum of the real power (kW) and reactive power (kVAR) and is the total power supplied from the mains power required to produce the right amount of real power.&lt;/p&gt;
&lt;p&gt;Suppose you are running a store, you have to spend an amount of money X (cost) on buying products to sell in the future for a larger amount of money Y, meaning your profit will be P = Y - X. X is not lost money, without spending X you will not be able to make any profit P. The profit P is comparable to the active power, the earnings Y are the equivalent of apparent power and the initial cost X is the reactive power.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeCogsEqn-1.gif" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-1.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Therefore, for a given power supply (kVA):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The more cost you have (higher percentage of kVAR), the lower the ratio of kW (profit) to kVA (profit + cost), meaning a poorer power factor.&lt;/li&gt;
&lt;li&gt;The less cost you have (lower percentage of kVAR), the higher your ratio of kW (profit) to kVA (profit + cost) becomes, and the better you power factor. As your cost (kVAR) approaches zero, your power factor approaches 1 (unity).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="voltage-instability"&gt;Voltage Instability&lt;/h2&gt;
&lt;p&gt;A stable voltage is when every piece of equipment connected to a network is operating under normal condition without issues, however when a fault or disturbance (harmonics) occurs in this system, the voltage becomes unstable.&lt;/p&gt;
&lt;p&gt;Due to voltage instability, the electrical system's voltage may collapse, if the voltage is below acceptable limits. Voltage collapse may be a total or partial black, the terms voltage instability and voltage collapse are interchangeable.&lt;/p&gt;
&lt;p&gt;For example, if 10 generators are running to keep 10 machines working. Suddenly 3 of the generators run out of fuel, but the 10 machines keep going. This would cause a loss of generation, not being able to maintain the power required to keep all the machines working and consequentially since there is not enough power to share between any of the machines, all 10 machines will turn off, causing a total blackout.&lt;/p&gt;
&lt;h2 id="capacitor-calculator-python"&gt;Capacitor Calculator - Python&lt;/h2&gt;
&lt;p&gt;Correcting power factor from a lagging (\&amp;lt;1) power factor, can be as simple as reducing reactive power (kVAR) in the system such that the ratio of real power (kW) to apparent power (kVA) is still as close to unity (1) as possible.&lt;/p&gt;
&lt;p&gt;Since motors require inductive or lagging power for magnetizing before useful work beings, this brings makes the power factor of the system lagging (\&amp;lt;1). Capacitors provide capacitive or leading reactive power that cancels out the lagging power when used for power-factor improvement. The improved power factor changes the current requirements of the system, but not the one required by the motor.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeCogsEqn-1-1.gif" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-1-1.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Apparent power calculation" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-2.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reactive power calculation" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-3.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Using these formulas we can calculate just how big of a capacitor we require:&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeCogsEqn-4.gif" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-4.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeCogsEqn-5.gif" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-5.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeCogsEqn-6.gif" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-6.gif"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="CodeCogsEqn-7.gif" class="img-fluid" src="https://jackmckew.dev/img/CodeCogsEqn-7.gif"/&gt;&lt;/p&gt;
&lt;p&gt;Once we input all these required formulas, and our initial data points, we are now able to easily compute the required size of capacitor to amend power factor issues.&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;

&lt;span class="n"&gt;real_power&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2.2&lt;/span&gt;     &lt;span class="c1"&gt;#Real power in kW&lt;/span&gt;
&lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;         &lt;span class="c1"&gt;#Current in amps&lt;/span&gt;
&lt;span class="n"&gt;voltage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;        &lt;span class="c1"&gt;#Voltage in volts&lt;/span&gt;
&lt;span class="n"&gt;frequency&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;       &lt;span class="c1"&gt;#Frequency in hertz&lt;/span&gt;
&lt;span class="n"&gt;corrected_pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.95&lt;/span&gt;  &lt;span class="c1"&gt;#Target power factor&lt;/span&gt;

&lt;span class="c1"&gt;#Calculate current power factor and apparent power&lt;/span&gt;
&lt;span class="n"&gt;current_pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;real_power&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;voltage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;S_current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;voltage&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;

&lt;span class="c1"&gt;#Power factors greater than 1 will give imaginary Q_current, alert user&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;#Calculate current reactive power&lt;/span&gt;
    &lt;span class="n"&gt;Q_current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S_current&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;real_power&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;#Calculate target apparent power&lt;/span&gt;
    &lt;span class="n"&gt;S_corrected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;real_power&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;corrected_pf&lt;/span&gt;

    &lt;span class="c1"&gt;#Calculate required reactive power compensation&lt;/span&gt;
    &lt;span class="n"&gt;Q_corrected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqrt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S_corrected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;real_power&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;#Calculate size of capacitor required for reactive power&lt;/span&gt;
    &lt;span class="n"&gt;Q_c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Q_current&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Q_corrected&lt;/span&gt;
    &lt;span class="n"&gt;C_f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Q_c&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pi&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;frequency&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;voltage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;#Print results to user&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Current power factor &lt;/span&gt;&lt;span class="si"&gt;{0:.3f}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_pf&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Current apparent power &lt;/span&gt;&lt;span class="si"&gt;{0:.3f}&lt;/span&gt;&lt;span class="s2"&gt; kVA"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;S_current&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Current reactive power &lt;/span&gt;&lt;span class="si"&gt;{0:.3f}&lt;/span&gt;&lt;span class="s2"&gt; kVAR"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Q_current&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Capacitor required &lt;/span&gt;&lt;span class="si"&gt;{0:.3f}&lt;/span&gt;&lt;span class="s2"&gt; Farads"&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;C_f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Current power factor &amp;gt; 1"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</content><category term="Engineering"></category><category term="power"></category><category term="electrical"></category><category term="python"></category></entry><entry><title>Episode 9 - Web Enabled Universal Remote - Part 1</title><link href="https://jackmckew.dev/episode-9-web-enabled-universal-remote-part-1.html" rel="alternate"></link><published>2019-01-18T07:30:00+11:00</published><updated>2019-01-18T07:30:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2019-01-18:/episode-9-web-enabled-universal-remote-part-1.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;I have a habit of misplacing all kinds of remotes within the house, TV, air conditioner, fans, etc, and having a different remote for everything can be quite annoying at times. So I decided to re-use some leftover components from a previous project to make a web enabled universal remote …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;I have a habit of misplacing all kinds of remotes within the house, TV, air conditioner, fans, etc, and having a different remote for everything can be quite annoying at times. So I decided to re-use some leftover components from a previous project to make a web enabled universal remote.&lt;/p&gt;
&lt;p&gt;Since most existing remotes use infrared to send the signal from the remote to the device, I figured it would be simple enough to create a infrared signal 'decoder' and then use a infrared diode to then replicate this signal back to the device. Next consideration was what do hardware is needed to get this project up and running.&lt;/p&gt;
&lt;p&gt;After researching a few other DIY remote control guides on the internet, I came up with a plan to use a wifi-enabled microcontroller together with an infrared receiver and an infrared diode. After rummaging through my spare hardware box, I happened to find a spare NodeMCU (ESP8266) that I could use for this project, this brings my part list to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wifi-Enabled Microcontroller (NodeMCU)&lt;/li&gt;
&lt;li&gt;A resistor to dampen the diode signal (100 ohm)&lt;/li&gt;
&lt;li&gt;A transistor to boost the current from the NodeMCU so the diode signal gets to the device (2N222)&lt;/li&gt;
&lt;li&gt;Infrared receiver (TSOP4136)&lt;/li&gt;
&lt;li&gt;Infrared diode (L-7113F3BT)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now before connecting the entire circuit together, one should always test that components work in an expected way. To achieve this for the infrared receiver, a basic program to interface between the receiver and the microcontroller is needed.&lt;/p&gt;
&lt;p&gt;For a basic test, an LED would light up whenever the infrared is receiving a signal. By following the circuit diagram with the corresponding code for the NodeMCU, this test for the receiver should be reproduce-able at home, please note that for other infrared receivers you will need to check the pin outs.&lt;!-- /wp:paragraph --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fritzing_FEKX395tbZ.png" class="img-fluid" src="https://jackmckew.dev/img/Fritzing_FEKX395tbZ.png"/&gt;&lt;/p&gt;
&lt;table class="highlighttable table table-striped"&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#define ledPin D0 &lt;/span&gt;&lt;span class="c1"&gt;//Connection at GPIO16 (D0) for the builtin LED on the NodeMCU board&lt;/span&gt;
&lt;span class="cp"&gt;#define inputPin D5 &lt;/span&gt;&lt;span class="c1"&gt;//Connection at GPIO14 (D5) for the infrared receiver&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// variable for reading the pin status&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;pinMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ledPin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// declare LED as output&lt;/span&gt;
   &lt;span class="n"&gt;pinMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputPin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;INPUT&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// declare Infrared sensor as input&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;digitalRead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inputPin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// read input value&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// check if the input is HIGH&lt;/span&gt;
      &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ledPin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LOW&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// turn LED OFF&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;else&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;digitalWrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ledPin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HIGH&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// turn LED ON&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;In the code above, this defines the pins that the sensor and LED are connected to, checks if the sensor is receiving a signal and then switches the builtin LED accordingly. Since the microcontroller loops without delay and an infrared remote control sends signals very quickly with delay in between, the LED only flickers when a remote is aimed at it, however proving the component works as expected.&lt;/p&gt;
&lt;p&gt;Now that we have confirmed the receiver works as expected, we have to integrate and interface the infrared diode with the microcontroller such that we are able to send the decoded signals back at the device.&lt;/p&gt;
&lt;p&gt;Since the NodeMCU can only pass a maximum current of 12mA through the GPIO pins, this will not be enough for the infrared diode peak spectrum which occurs at 20mA. To boost the current up from 12mA to 20mA+, it is best to use a simple transistor, for this project I had some 2N2222 transistors lying around so decided to use them. The following circuit diagram shows how the infrared diode, transistor and microcontroller integrate together.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fritzing_LqJjWJppSm.png" class="img-fluid" src="https://jackmckew.dev/img/Fritzing_LqJjWJppSm.png"/&gt;&lt;/p&gt;
&lt;p&gt;Since the human eye cannot see the infrared diode turning on/off, this creates a challenge for testing this component before implementing the project. I did not create a test specifically for the diode, and will test whether it works correctly later on in some function testing of the project.&lt;/p&gt;
&lt;p&gt;This completes the hardware component of this project, the next part of this project will be the software. I am planning to utilise both docker and django on my home Raspberry Pi to act as a webserver that will issue commands to the microcontroller over a network to mimic the device's remote control.&lt;/p&gt;</content><category term="Engineering"></category><category term="electronics"></category></entry><entry><title>Episode 2 - Kew-It</title><link href="https://jackmckew.dev/episode-2-kew-it.html" rel="alternate"></link><published>2018-11-30T03:08:00+11:00</published><updated>2018-11-30T03:08:00+11:00</updated><author><name>Jack McKew</name></author><id>tag:jackmckew.dev,2018-11-30:/episode-2-kew-it.html</id><summary type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Yesterday, I submitted my Electrical Engineering honours thesis.&lt;/p&gt;
&lt;p&gt;My project consisted of creating a hardware/software solution to schedule appliances in home to minimize energy costs through time of use pricing.&lt;/p&gt;
&lt;p&gt;The hardware is a "black box" that monitors power usage of appliances and logs this data through Wi-Fi to …&lt;/p&gt;&lt;/body&gt;</summary><content type="html">&lt;/head&gt;&lt;body&gt;&lt;p&gt;Yesterday, I submitted my Electrical Engineering honours thesis.&lt;/p&gt;
&lt;p&gt;My project consisted of creating a hardware/software solution to schedule appliances in home to minimize energy costs through time of use pricing.&lt;/p&gt;
&lt;p&gt;The hardware is a "black box" that monitors power usage of appliances and logs this data through Wi-Fi to a database hosted locally.&lt;/p&gt;
&lt;p&gt;The software utilized an multi-objective evolutionary algorithm to then determine what the most beneficial time for each of the appliances to run. By using python for these computations, directly when the results are determined, a control strategy sends control messages back out to the "black boxes" to control the appliances automatically.&lt;/p&gt;
&lt;p&gt;By scheduling appliances in this manner, showed up to 50% reduction in cost of energy daily. As this can be scaled to any size of implementation, this project could show significant savings in cost of energy for any building/business. The project has an estimated payback period of 5 months, comparable to that of solar with 4-5 years.&lt;/p&gt;</content><category term="Engineering"></category><category term="data"></category><category term="thesis"></category></entry></feed>